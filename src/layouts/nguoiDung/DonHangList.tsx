// import React, { useEffect, useState } from "react";
// import { layToanBoDonHang, layDonHangTheoNguoiDung, xoaDonHang } from "../../API/DonHangAPI";
// import DonHangModel from "../../models/DonHangModel";
//
// interface DonHangListProps {
//     isAdmin: boolean;
// }
//
// const DonHangList: React.FC<DonHangListProps> = ({ isAdmin }) => {
//     const [donHangs, setDonHangs] = useState<DonHangModel[]>([]);
//
//     useEffect(() => {
//         if (isAdmin) {
//             layToanBoDonHang().then((data: DonHangModel[]) => setDonHangs(data));
//         } else {
//             const maNguoiDung = localStorage.getItem("userId");
//             if (maNguoiDung) {
//                 layDonHangTheoNguoiDung(parseInt(maNguoiDung)).then((data: DonHangModel[]) => setDonHangs(data));
//             }
//         }
//     }, [isAdmin]);
//
//     const handleDelete = (id: number) => {
//         xoaDonHang(id).then(() => {
//             alert("ƒê√£ x√≥a ƒë∆°n h√†ng!");
//             setDonHangs(donHangs.filter((donHang) => donHang.maDonHang !== id));
//         });
//     };
//
//     return (
//         <div>
//             <h1>{isAdmin ? "üì¶ Qu·∫£n l√Ω ƒë∆°n h√†ng" : "üì¶ ƒê∆°n h√†ng c·ªßa t√¥i"}</h1>
//             <ul>
//                 {donHangs.map((donHang) => (
//                     <li key={donHang.maDonHang}>
//                         {donHang.diaChiNhanHang} - {donHang.tongTien} VND
//                         {isAdmin && <button onClick={() => handleDelete(donHang.maDonHang)}>X√≥a</button>}
//                     </li>
//                 ))}
//             </ul>
//         </div>
//     );
// };
//
// export default DonHangList;

// import React, { useEffect, useState } from "react";
// // S·ª≠a import API cho ƒë√∫ng t√™n h√†m m·ªõi v√† ƒë∆∞·ªùng d·∫´n
// import { layDonHangCuaToi } from "../../API/DonHangAPI"; // Gi·∫£ s·ª≠ API ·ªü ƒë√¢y, s·ª≠a n·∫øu c·∫ßn
// // Import DTO thay v√¨ Model n·∫øu Backend tr·∫£ v·ªÅ DTO (khuy·∫øn ngh·ªã)
// // import DonHangModel from "../../models/DonHangModel"; // Model c≈©
// import { DonHangDTO } from "../../dto/DonHangDTO"; // << Ho·∫∑c import t·ª´ n∆°i b·∫°n ƒë·ªãnh nghƒ©a DTO ·ªü FE
// import { Link } from "react-router-dom";
// import dinhDangSo from "../Utils/dinhDangSo"; // Import h√†m ƒë·ªãnh d·∫°ng s·ªë
//
// // B·ªè prop isAdmin v√¨ component n√†y ch·ªâ d√†nh cho ng∆∞·ªùi d√πng xem ƒë∆°n c·ªßa h·ªç
// const DonHangList: React.FC = () => {
//     // S·ª≠ d·ª•ng ki·ªÉu d·ªØ li·ªáu DTO n·∫øu Backend tr·∫£ v·ªÅ DTO
//     const [donHangs, setDonHangs] = useState<DonHangDTO[]>([]);
//     const [loading, setLoading] = useState(true);
//     const [error, setError] = useState<string | null>(null);
//
//     useEffect(() => {
//         setLoading(true);
//         setError(null);
//         // G·ªçi API m·ªõi ƒë·ªÉ l·∫•y ƒë∆°n h√†ng c·ªßa ng∆∞·ªùi d√πng ƒëang ƒëƒÉng nh·∫≠p
//         layDonHangCuaToi()
//             .then(data => {
//                 // S·∫Øp x·∫øp ƒë∆°n h√†ng m·ªõi nh·∫•t l√™n ƒë·∫ßu (t√πy ch·ªçn)
//                 data.sort((a, b) => b.maDonHang - a.maDonHang);
//                 setDonHangs(data);
//                 setLoading(false);
//             })
//             .catch(err => {
//                 setError(err.message || "L·ªói t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng.");
//                 setLoading(false);
//                 console.error("L·ªói fetch ƒë∆°n h√†ng:", err);
//             });
//         // Kh√¥ng c·∫ßn dependency v√¨ ch·ªâ load 1 l·∫ßn khi v√†o trang
//     }, []);
//
//     if (loading) {
//         return <div className="container mt-4 text-center"><h5>ƒêang t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng...</h5></div>;
//     }
//
//     if (error) {
//         return <div className="container mt-4 alert alert-danger">L·ªói: {error}</div>;
//     }
//
//     return (
//         <div className="container mt-4 mb-5">
//             <h1 className="mb-4">L·ªãch s·ª≠ ƒë∆°n h√†ng c·ªßa t√¥i</h1>
//             {donHangs.length === 0 ? (
//                 <div className="text-center p-5 border rounded bg-light">
//                     <p className="lead">B·∫°n ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
//                     <Link to="/" className="btn btn-primary mt-3">
//                         <i className="fas fa-shopping-bag me-2"></i> B·∫Øt ƒë·∫ßu mua s·∫Øm
//                     </Link>
//                 </div>
//             ) : (
//                 <div className="list-group">
//                     {donHangs.map((donHang) => (
//                         // === S·ª¨A L·ªñI KEY PROP: Th√™m key={donHang.maDonHang} ===
//                         <div key={donHang.maDonHang} className="list-group-item list-group-item-action flex-column align-items-start mb-3 shadow-sm">
//                             {/* === K·∫æT TH√öC S·ª¨A === */}
//                             <div className="d-flex w-100 justify-content-between mb-2">
//                                 <h5 className="mb-1">M√£ ƒë∆°n: #{donHang.maDonHang}</h5>
//                                 <small className="text-muted">Ng√†y ƒë·∫∑t: {new Date(donHang.ngayTao).toLocaleDateString('vi-VN')}</small>
//                             </div>
//                             <div className="row mb-1">
//                                 <div className="col-md-8">
//                                     {/* Hi·ªÉn th·ªã t√≥m t·∫Øt s·∫£n ph·∫©m (v√≠ d·ª•: t√™n s·∫£n ph·∫©m ƒë·∫ßu ti√™n v√† s·ªë l∆∞·ª£ng) */}
//                                     {donHang.danhSachChiTietDonHang && donHang.danhSachChiTietDonHang.length > 0 && (
//                                         <p className="mb-1 small text-muted">
//                                             S·∫£n ph·∫©m: {donHang.danhSachChiTietDonHang[0].tenSach}
//                                             {donHang.danhSachChiTietDonHang.length > 1 && ` v√† ${donHang.danhSachChiTietDonHang.length - 1} s·∫£n ph·∫©m kh√°c...`}
//                                         </p>
//                                     )}
//                                 </div>
//                                 <div className="col-md-4 text-md-end">
//                                     <p className="mb-1">T·ªïng ti·ªÅn: <span className="fw-bold text-danger">{dinhDangSo(donHang.tongTien)} ƒë</span></p>
//                                 </div>
//                             </div>
//                             <div className="d-flex justify-content-between align-items-center">
//                                 <span className={`badge ${
//                                     donHang.trangThai === 'ƒê√£ h·ªßy' ? 'bg-danger' :
//                                         donHang.trangThai === 'ƒê√£ giao' ? 'bg-success' :
//                                             donHang.trangThai === 'ƒêang giao' ? 'bg-info' :
//                                                 'bg-warning text-dark' // M·∫∑c ƒë·ªãnh l√† Ch·ªù x·ª≠ l√Ω ho·∫∑c tr·∫°ng th√°i kh√°c
//                                 }`}>{donHang.trangThai || 'Ch·ªù x·ª≠ l√Ω'}</span>
//                                 {/* N√∫t Xem Chi Ti·∫øt (s·∫Ω l√†m sau) */}
//                                 {/* <Link to={`/tai-khoan/don-hang/${donHang.maDonHang}`} className="btn btn-sm btn-outline-primary">
//                                     Xem chi ti·∫øt
//                                 </Link> */}
//                             </div>
//                         </div>
//                     ))}
//                 </div>
//             )}
//         </div>
//     );
// };
//
// export default DonHangList;



// // V√≠ d·ª•: src/layouts/nguoiDung/DonHangList.tsx
// import React, { useEffect, useState } from "react";
// import { Link, useNavigate } from "react-router-dom";
// import { layDonHangCuaToi } from "../../API/DonHangAPI";     // <<< S·ª≠a ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn
// import DonHangModel from "../../models/DonHangModel";       // <<< S·ª≠a ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn
// import dinhDangSo from "../Utils/dinhDangSo";            // <<< S·ª≠a ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn
// import { isLoggedIn } from "../Utils/authCheck";       // <<< S·ª≠a ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn
//
// const DonHangList: React.FC<{isAdmin?: boolean}> = ({isAdmin}) => { // Th√™m l·∫°i prop isAdmin n·∫øu c·∫ßn ph√¢n bi·ªát r√µ r√†ng h∆°n
//     const [donHangs, setDonHangs] = useState<DonHangModel[]>([]);
//     const [loading, setLoading] = useState(true);
//     const [error, setError] = useState<string | null>(null);
//     const navigate = useNavigate();
//
//     useEffect(() => {
//         // Ch·ªâ fetch n·∫øu ƒëang ·ªü trang ng∆∞·ªùi d√πng (component n√†y kh√¥ng n√™n d√πng cho admin)
//         if (!isAdmin) {
//             if (!isLoggedIn()) {
//                 alert("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem ƒë∆°n h√†ng.");
//                 navigate('/dang-nhap', { replace: true });
//                 return;
//             }
//
//             setLoading(true);
//             setError(null);
//             layDonHangCuaToi()
//                 .then(data => {
//                     // S·∫Øp x·∫øp ƒë∆°n h√†ng m·ªõi nh·∫•t l√™n ƒë·∫ßu
//                     if (Array.isArray(data)) {
//                         data.sort((a, b) => b.maDonHang - a.maDonHang);
//                         setDonHangs(data);
//                     } else {
//                         // X·ª≠ l√Ω tr∆∞·ªùng h·ª£p data kh√¥ng ph·∫£i m·∫£ng (API tr·∫£ v·ªÅ l·ªói?)
//                         console.error("API layDonHangCuaToi kh√¥ng tr·∫£ v·ªÅ m·ªôt m·∫£ng:", data);
//                         setError("ƒê·ªãnh d·∫°ng d·ªØ li·ªáu ƒë∆°n h√†ng kh√¥ng h·ª£p l·ªá.");
//                         setDonHangs([]); // ƒê·∫∑t th√†nh m·∫£ng r·ªóng
//                     }
//                     setLoading(false);
//                 })
//                 .catch(err => {
//                     setError(err.message || "L·ªói t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng.");
//                     setLoading(false);
//                     console.error("L·ªói fetch ƒë∆°n h√†ng:", err);
//                 });
//         } else {
//             // N·∫øu component n√†y v√¥ t√¨nh ƒë∆∞·ª£c d√πng cho admin, kh√¥ng l√†m g√¨ c·∫£ ho·∫∑c b√°o l·ªói
//             setLoading(false);
//             setError("Component n√†y ch·ªâ d√†nh cho ng∆∞·ªùi d√πng xem ƒë∆°n h√†ng c√° nh√¢n.");
//         }
//
//         // eslint-disable-next-line react-hooks/exhaustive-deps
//     }, [isAdmin, navigate]); // Th√™m isAdmin v√† navigate v√†o dependency
//
//     // --- Ph·∫ßn Render ---
//     if (loading) {
//         return <div className="container mt-4 text-center"><h5>ƒêang t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng...</h5></div>;
//     }
//
//     if (error) {
//         return <div className="container mt-4 alert alert-danger">L·ªói: {error}</div>;
//     }
//
//     return (
//         <div className="container mt-4 mb-5">
//             <h1 className="mb-4">ƒê∆°n h√†ng c·ªßa t√¥i</h1>
//             {donHangs.length === 0 ? (
//                 <div className="text-center p-5 border rounded bg-light">
//                     <p className="lead">B·∫°n ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
//                     <Link to="/" className="btn btn-primary mt-3">
//                         <i className="fas fa-shopping-bag me-2"></i> B·∫Øt ƒë·∫ßu mua s·∫Øm
//                     </Link>
//                 </div>
//             ) : (
//                 <div className="list-group">
//                     {donHangs.map((donHang) => (
//                         // B·ªçc m·ªói ƒë∆°n h√†ng b·∫±ng div thay v√¨ Link tr·ª±c ti·∫øp
//                         <div key={donHang.maDonHang} className="list-group-item list-group-item-action flex-column align-items-start mb-3 shadow-sm">
//                             <div className="d-flex w-100 justify-content-between mb-2">
//                                 <h5 className="mb-1 text-primary">M√£ ƒë∆°n: #{donHang.maDonHang}</h5>
//                                 <small className="text-muted">Ng√†y ƒë·∫∑t: {donHang.ngayTao ? new Date(donHang.ngayTao).toLocaleDateString('vi-VN') : 'N/A'}</small>
//                             </div>
//                             <div className="row mb-1">
//                                 <div className="col-md-8">
//                                     {/* Hi·ªÉn th·ªã t√≥m t·∫Øt s·∫£n ph·∫©m */}
//                                     {donHang.danhSachChiTietDonHang && donHang.danhSachChiTietDonHang.length > 0 && (
//                                         <p className="mb-1 small text-muted">
//                                             {/* Gi·∫£ s·ª≠ chi ti·∫øt ƒë∆°n h√†ng c√≥ th√¥ng tin s√°ch */}
//                                             {donHang.danhSachChiTietDonHang[0].sach?.tenSach || 'S·∫£n ph·∫©m'}
//                                             ({donHang.danhSachChiTietDonHang[0].soLuong}x)
//                                             {donHang.danhSachChiTietDonHang.length > 1 && ` v√† ${donHang.danhSachChiTietDonHang.length - 1} lo·∫°i kh√°c...`}
//                                         </p>
//                                     )}
//                                     <p className="mb-1 small">Giao ƒë·∫øn: {donHang.diaChiNhanHang || 'N/A'}</p>
//                                 </div>
//                                 <div className="col-md-4 text-md-end">
//                                     <p className="mb-1 fw-bold">T·ªïng ti·ªÅn: <span className="text-danger">{dinhDangSo(donHang.tongTien)} ƒë</span></p>
//                                 </div>
//                             </div>
//                             <div className="d-flex justify-content-between align-items-center mt-2">
//                                 {/* Hi·ªÉn th·ªã tr·∫°ng th√°i */}
//                                 <span className={`badge rounded-pill ${
//                                     donHang.trangThai === 'ƒê√£ h·ªßy' ? 'bg-danger' :
//                                         donHang.trangThai === 'ƒê√£ giao h√†ng' ? 'bg-success' : // S·ª≠a l·∫°i n·∫øu tr·∫°ng th√°i kh√°c
//                                             donHang.trangThai === 'ƒêang giao h√†ng' ? 'bg-info' :
//                                                 donHang.trangThai === 'ƒêang x·ª≠ l√Ω' ? 'bg-warning text-dark' : // S·ª≠a l·∫°i n·∫øu tr·∫°ng th√°i kh√°c
//                                                     'bg-secondary' // Tr·∫°ng th√°i m·∫∑c ƒë·ªãnh/kh√°c
//                                 }`}>
//                                     {donHang.trangThai || 'Ch∆∞a x√°c ƒë·ªãnh'}
//                                 </span>
//                                 {/* C√≥ th·ªÉ th√™m n√∫t xem chi ti·∫øt ƒë∆°n h√†ng ·ªü ƒë√¢y */}
//                                 {/* <Link to={`/tai-khoan/don-hang/${donHang.maDonHang}`} className="btn btn-sm btn-outline-primary">Xem chi ti·∫øt</Link> */}
//                             </div>
//                         </div>
//                     ))}
//                 </div>
//             )}
//         </div>
//     );
// };
//
// export default DonHangList;
//
//

import React, { useEffect, useState } from "react";
import { Link, useLocation, useNavigate } from "react-router-dom";

import { layDonHangCuaToi } from "../../API/DonHangAPI";
import DonHangModel from "../../models/DonHangModel"; // Model ƒë∆°n h√†ng
import dinhDangSo from "../Utils/dinhDangSo";
import { isLoggedIn } from "../Utils/authCheck";

type Props = { isAdmin?: boolean };

const DonHangList: React.FC<Props> = ({ isAdmin }) => {
    const [donHangs, setDonHangs] = useState<DonHangModel[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);

    const navigate = useNavigate();
    const location = useLocation();

    // ======================= H√ÄM LOAD D·ªÆ LI·ªÜU =======================
    const load = async () => {
        setLoading(true);
        setError(null);

        try {
            const data = await layDonHangCuaToi(); // g·ªçi API ƒë∆°n h√†ng
            setDonHangs(Array.isArray(data) ? data : []);

            // N·∫øu v·ª´a ƒëi·ªÅu h∆∞·ªõng t·ª´ trang "ƒê·∫∑t h√†ng th√†nh c√¥ng" (c√≥ ?ts=)
            // m√† API ch∆∞a tr·∫£ ƒë∆°n m·ªõi, th·ª≠ refetch 1 l·∫ßn sau 250ms
            const hasTs = new URLSearchParams(location.search).has("ts");
            if (hasTs && (!data || data.length === 0)) {
                console.log("[DonHangList] Kh√¥ng th·∫•y ƒë∆°n m·ªõi, th·ª≠ refetch sau 250ms...");
                setTimeout(async () => {
                    try {
                        const again = await layDonHangCuaToi();
                        if (again && again.length > 0) {
                            console.log("[DonHangList] Refetch th√†nh c√¥ng, c·∫≠p nh·∫≠t ƒë∆°n m·ªõi!");
                            setDonHangs(again);
                        }
                    } catch (err) {
                        console.warn("[DonHangList] Refetch th·∫•t b·∫°i:", err);
                    }
                }, 250);
            }
        } catch (e: any) {
            setError(e?.message || "L·ªói t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng.");
        } finally {
            setLoading(false);
        }
    };

    // ======================= USE EFFECT =======================
    useEffect(() => {
        if (isAdmin) {
            setLoading(false);
            setError("Component n√†y ch·ªâ d√†nh cho ng∆∞·ªùi d√πng xem ƒë∆°n h√†ng c√° nh√¢n.");
            return;
        }

        if (!isLoggedIn()) {
            alert("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem ƒë∆°n h√†ng.");
            navigate("/dang-nhap", {
                replace: true,
                state: { from: location.pathname },
            });
            return;
        }

        load();

        // M·ªói l·∫ßn quay l·∫°i trang ho·∫∑c c√≥ query (?ts=...) m·ªõi th√¨ refetch
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [isAdmin, location.key, location.search]);

    // ======================= GIAO DI·ªÜN HI·ªÇN TH·ªä =======================
    if (loading)
        return (
            <div className="container mt-4 text-center">
                <h5>ƒêang t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng...</h5>
            </div>
        );

    if (error)
        return (
            <div className="container mt-4 alert alert-danger">L·ªói: {error}</div>
        );

    return (
        <div className="container mt-4 mb-5">
            <h1 className="mb-4">ƒê∆°n h√†ng c·ªßa t√¥i</h1>

            {donHangs.length === 0 ? (
                <div className="text-center p-5 border rounded bg-light">
                    <p className="lead">B·∫°n ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
                    <Link to="/" className="btn btn-primary mt-3">
                        <i className="fas fa-shopping-bag me-2"></i> B·∫Øt ƒë·∫ßu mua s·∫Øm
                    </Link>
                </div>
            ) : (
                <div className="list-group">
                    {donHangs.map((dh) => (
                        <div
                            key={dh.maDonHang}
                            className="list-group-item list-group-item-action flex-column align-items-start mb-3 shadow-sm"
                        >
                            <div className="d-flex w-100 justify-content-between mb-2">
                                <h5 className="mb-1 text-primary">M√£ ƒë∆°n: #{dh.maDonHang}</h5>
                                <small className="text-muted">
                                    Ng√†y ƒë·∫∑t:{" "}
                                    {dh.ngayTao
                                        ? new Date(dh.ngayTao).toLocaleDateString("vi-VN")
                                        : "N/A"}
                                </small>
                            </div>

                            <div className="row mb-1">
                                <div className="col-md-8">
                                    <p className="mb-1 small">
                                        Giao ƒë·∫øn: {dh.diaChiNhanHang || "N/A"}
                                    </p>
                                </div>
                                <div className="col-md-4 text-md-end">
                                    <p className="mb-1 fw-bold">
                                        T·ªïng ti·ªÅn:{" "}
                                        <span className="text-danger">
                      {dinhDangSo(dh.tongTien)} ƒë
                    </span>
                                    </p>
                                </div>
                            </div>

                            <div className="d-flex justify-content-between align-items-center mt-2">
                <span
                    className={`badge rounded-pill ${
                        dh.trangThai === "ƒê√£ h·ªßy"
                            ? "bg-danger"
                            : dh.trangThai === "ƒê√£ giao h√†ng"
                                ? "bg-success"
                                : dh.trangThai === "ƒêang giao h√†ng"
                                    ? "bg-info"
                                    : dh.trangThai === "ƒêang x·ª≠ l√Ω"
                                        ? "bg-warning text-dark"
                                        : "bg-secondary"
                    }`}
                >
                  {dh.trangThai || "Ch∆∞a x√°c ƒë·ªãnh"}
                </span>

                                {/* N√∫t xem chi ti·∫øt (n·∫øu c√≥ route chi ti·∫øt) */}
                                {/* <Link
                  to={`/tai-khoan/don-hang/${dh.maDonHang}`}
                  className="btn btn-sm btn-outline-primary"
                >
                  Xem chi ti·∫øt
                </Link> */}
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
};

export default DonHangList;
