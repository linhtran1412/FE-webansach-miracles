// import { request } from "./request";
// import DonHangModel from "../models/DonHangModel";
//
// // L·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng (Admin)
// export async function layToanBoDonHang(): Promise<DonHangModel[]> {
//     return request("http://localhost:8080/don-hang");
// }
//
// // L·∫•y ƒë∆°n h√†ng theo ng∆∞·ªùi d√πng (User)
// // export async function layDonHangTheoNguoiDung(maNguoiDung: number): Promise<DonHangModel[]> {
// //     return request(`http://localhost:8080/don-hang/nguoi-dung/${maNguoiDung}`);
// // }
// export async function layDonHangTheoNguoiDung(maNguoiDung: number): Promise<DonHangModel[]> {
//     console.log(`üì§ G·ª≠i y√™u c·∫ßu l·∫•y ƒë∆°n h√†ng c·ªßa user ID: ${maNguoiDung}`);
//     return fetch(`http://localhost:8080/don-hang/nguoi-dung/${maNguoiDung}`)
//         .then(response => response.json())
//         .then(data => {
//             console.log("‚úÖ D·ªØ li·ªáu ƒë∆°n h√†ng nh·∫≠n v·ªÅ:", data);
//             return data;
//         })
//         .catch(error => {
//             console.error("‚ùå L·ªói khi l·∫•y ƒë∆°n h√†ng c·ªßa user:", error);
//             return [];
//         });
// }
//
// // Th√™m m·ªõi ƒë∆°n h√†ng
// export async function themDonHang(donHang: DonHangModel) {
//     console.log("üì§ G·ª≠i y√™u c·∫ßu th√™m ƒë∆°n h√†ng:", donHang);
//     return fetch("http://localhost:8080/don-hang", {
//         method: "POST",
//         headers: {
//             "Content-Type": "application/json",
//         },
//         body: JSON.stringify(donHang),
//     })
//         .then(response => response.json())
//         .then(data => {
//             console.log("‚úÖ Server tr·∫£ v·ªÅ:", data);
//             return data;
//         })
//         .catch(error => {
//             console.error("‚ùå L·ªói API themDonHang:", error);
//             throw error;
//         });
// }
//
// // C·∫≠p nh·∫≠t ƒë∆°n h√†ng
// export async function capNhatDonHang(donHang: DonHangModel) {
//     console.log("üì§ G·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t ƒë∆°n h√†ng:", donHang);
//     return fetch(`http://localhost:8080/don-hang/${donHang.maDonHang}`, {
//         method: "PUT",
//         headers: {
//             "Content-Type": "application/json",
//         },
//         body: JSON.stringify(donHang),
//     })
//         .then(response => response.json())
//         .then(data => {
//             console.log("‚úÖ Server tr·∫£ v·ªÅ:", data);
//             return data;
//         })
//         .catch(error => {
//             console.error("‚ùå L·ªói API capNhatDonHang:", error);
//             throw error;
//         });
// }
//
// // X√≥a ƒë∆°n h√†ng
// export async function xoaDonHang(maDonHang: number) {
//     console.log("üì§ G·ª≠i y√™u c·∫ßu x√≥a ƒë∆°n h√†ng:", maDonHang);
//     return fetch(`http://localhost:8080/don-hang/${maDonHang}`, {
//         method: "DELETE"
//     })
//         .then(response => {
//             if (!response.ok) throw new Error("L·ªói khi x√≥a ƒë∆°n h√†ng");
//             console.log("‚úÖ ƒê∆°n h√†ng ƒë√£ x√≥a:", maDonHang);
//         })
//         .catch(error => {
//             console.error("‚ùå L·ªói API xoaDonHang:", error);
//             throw error;
//         });
// }
//
//


// // src/API/DonHangAPI.ts (ho·∫∑c .tsx)
//
// // B·ªè DonHangModel n·∫øu kh√¥ng d√πng n·ªØa trong c√°c h√†m kh√°c
// import DonHangModel from "../models/DonHangModel";
//
// // <<< S·ª¨A ƒê∆Ø·ªúNG D·∫™N IMPORT DTO ·ªû ƒê√ÇY >>>
// import { DonHangDTO } from "../dto/DonHangDTO"; // Ch·ªâ c·∫ßn ../ ƒë·ªÉ ƒëi t·ª´ API ra src r·ªìi v√†o dto
//
// // H√†m ti·ªán √≠ch l·∫•y token
// const getToken = () => localStorage.getItem('token');
//
// // H√†m l·∫•y ƒë∆°n h√†ng c·ªßa User (ƒë√£ ƒë√∫ng)
// export async function layDonHangCuaToi(): Promise<DonHangDTO[]> {
//     const token = getToken();
//     if (!token) {
//         throw new Error("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem ƒë∆°n h√†ng.");
//     }
//     const url = 'http://localhost:8080/api/don-hang/my-orders';
//     console.log(`[DonHangAPI] Fetching my orders: GET ${url}`);
//     try {
//         const response = await fetch(url, {
//             method: 'GET',
//             headers: { 'Authorization': `Bearer ${token}` }
//         });
//         if (!response.ok) {
//             let errorMsg = `L·ªói ${response.status} khi l·∫•y l·ªãch s·ª≠ ƒë∆°n h√†ng`;
//             try {
//                 const errorData = await response.json().catch(() => response.text());
//                 if (typeof errorData === 'string') { errorMsg = `${errorMsg}: ${errorData}`; }
//                 else if (errorData && (errorData.message || errorData.noiDung)) { errorMsg = errorData.noiDung || errorData.message;}
//             } catch (e) { /* ignore */ }
//             throw new Error(errorMsg);
//         }
//         const data: DonHangDTO[] = await response.json();
//         console.log("‚úÖ D·ªØ li·ªáu ƒë∆°n h√†ng c√° nh√¢n nh·∫≠n v·ªÅ (DTO):", data);
//         return data;
//     } catch (error) {
//         console.error("[DonHangAPI] layDonHangCuaToi error:", error);
//         throw error;
//     }
// }
//
// // --- C√°c h√†m c≈© cho Admin/Staff (Gi·ªØ nguy√™n nh∆∞ng c·∫ßn review sau) ---
//
// export async function layToanBoDonHang(): Promise<DonHangModel[]> { // T·∫°m gi·ªØ Model
//     const token = getToken();
//     try {
//         const response = await fetch("http://localhost:8080/api/don-hang", {
//             headers: { 'Authorization': `Bearer ${token}` }
//         });
//         if (!response.ok) throw new Error("L·ªói t·∫£i to√†n b·ªô ƒë∆°n h√†ng");
//         return response.json();
//     } catch (error) {
//         console.error("L·ªói API layToanBoDonHang:", error);
//         throw error;
//     }
// }
//
// export async function themDonHang(donHang: DonHangModel) {
//     const token = getToken();
//     console.log("üì§ G·ª≠i y√™u c·∫ßu th√™m ƒë∆°n h√†ng:", donHang);
//     try {
//         const response = await fetch("http://localhost:8080/api/don-hang", {
//             method: "POST",
//             headers: {
//                 "Content-Type": "application/json",
//                 'Authorization': `Bearer ${token}`
//             },
//             body: JSON.stringify(donHang),
//         });
//         if (!response.ok) throw new Error("L·ªói th√™m ƒë∆°n h√†ng");
//         return response.json();
//     } catch (error) {
//         console.error("‚ùå L·ªói API themDonHang:", error);
//         throw error;
//     }
// }
//
// export async function capNhatDonHang(donHang: DonHangModel) { // T·∫°m gi·ªØ Model
//     const token = getToken();
//     console.log("üì§ G·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t ƒë∆°n h√†ng:", donHang);
//     try {
//         const response = await fetch(`http://localhost:8080/api/don-hang/${donHang.maDonHang}`, {
//             method: "PUT",
//             headers: {
//                 "Content-Type": "application/json",
//                 'Authorization': `Bearer ${token}`
//             },
//             body: JSON.stringify(donHang),
//         });
//         if (!response.ok) throw new Error("L·ªói c·∫≠p nh·∫≠t ƒë∆°n h√†ng");
//         return response.json();
//     } catch (error) {
//         console.error("‚ùå L·ªói API capNhatDonHang:", error);
//         throw error;
//     }
// }
//
// export async function xoaDonHang(maDonHang: number) {
//     const token = getToken();
//     console.log("üì§ G·ª≠i y√™u c·∫ßu x√≥a ƒë∆°n h√†ng:", maDonHang);
//     try {
//         const response = await fetch(`http://localhost:8080/api/don-hang/${maDonHang}`, {
//             method: "DELETE",
//             headers: { 'Authorization': `Bearer ${token}` }
//         });
//         if (!response.ok) {
//             const errorText = await response.text().catch(() => response.statusText);
//             throw new Error(`L·ªói ${response.status} khi x√≥a ƒë∆°n h√†ng: ${errorText}`);
//         }
//         console.log("‚úÖ ƒê∆°n h√†ng ƒë√£ x√≥a:", maDonHang);
//     } catch (error) {
//         console.error("‚ùå L·ªói API xoaDonHang:", error);
//         throw error;
//     }
// }
//
// /*
// // H√†m c≈© ƒë√£ comment ho·∫∑c x√≥a
// export async function layDonHangTheoNguoiDung(maNguoiDung: number): Promise<DonHangModel[]> {
//     // ... code c≈© ...
// }
// */






// // src/API/DonHangAPI.ts
// import DonHangModel from "../models/DonHangModel"; // ƒê·∫£m b·∫£o import ƒë√∫ng model
//
// // H√†m ti·ªán √≠ch l·∫•y token (n·∫øu ch∆∞a c√≥ ·ªü file d√πng chung n√†o kh√°c)
// const getToken = () => localStorage.getItem('token');
//
// // --- H√ÄM L·∫§Y ƒê∆†N H√ÄNG C·ª¶A USER HI·ªÜN T·∫†I ---
// /**
//  * G·ªçi API ƒë·ªÉ l·∫•y danh s√°ch ƒë∆°n h√†ng c·ªßa ng∆∞·ªùi d√πng ƒëang ƒëƒÉng nh·∫≠p.
//  * Y√™u c·∫ßu ng∆∞·ªùi d√πng ph·∫£i ƒëƒÉng nh·∫≠p (c√≥ token).
//  * @returns Promise<DonHangModel[]> M·∫£ng c√°c ƒë∆°n h√†ng c·ªßa user.
//  */
// export async function layDonHangCuaToi(): Promise<DonHangModel[]> {
//     const token = getToken();
//     if (!token) {
//         console.error("[layDonHangCuaToi] L·ªói: Kh√¥ng t√¨m th·∫•y token.");
//         throw new Error("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem ƒë∆°n h√†ng.");
//     }
//
//     // URL ƒë√∫ng c·ªßa API ƒë√£ t·∫°o ·ªü Backend (GET /don-hang/my-orders)
//     const url = 'http://localhost:8080/don-hang/my-orders';
//     console.log(`[DonHangAPI] Fetching my orders: GET ${url}`); // Debug
//
//     try {
//         const response = await fetch(url, {
//             method: 'GET',
//             headers: {
//                 'Authorization': `Bearer ${token}` // G·ª≠i k√®m token
//             }
//         });
//
//         if (!response.ok) {
//             const errorText = await response.text().catch(() => `L·ªói ${response.status}`);
//             console.error(`[layDonHangCuaToi] L·ªói ${response.status}:`, errorText);
//             // N√©m l·ªói ƒë·ªÉ component DonHangList c√≥ th·ªÉ b·∫Øt v√† hi·ªÉn th·ªã
//             throw new Error(errorText || `L·ªói ${response.status} khi l·∫•y l·ªãch s·ª≠ ƒë∆°n h√†ng`);
//         }
//
//         const data: DonHangModel[] = await response.json();
//         console.log("‚úÖ D·ªØ li·ªáu ƒë∆°n h√†ng c√° nh√¢n nh·∫≠n v·ªÅ:", data); // Debug
//         return data; // Tr·∫£ v·ªÅ m·∫£ng DonHangModel
//
//     } catch (error) {
//         console.error("[DonHangAPI] layDonHangCuaToi fetch/parse error:", error);
//         throw error; // N√©m l·ªói ra ƒë·ªÉ component x·ª≠ l√Ω
//     }
// }
//
// // --- C√ÅC H√ÄM API KH√ÅC CHO ADMIN (N·∫æU C·∫¶N) ---
// // L∆∞u √Ω: C√°c h√†m n√†y c≈©ng c·∫ßn ki·ªÉm tra v√† g·ª≠i token n·∫øu API Backend y√™u c·∫ßu
//
// // L·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng (Admin)
// export async function layToanBoDonHangAdmin(): Promise<DonHangModel[]> {
//     const token = getToken();
//     if (!token) throw new Error("Y√™u c·∫ßu quy·ªÅn Admin."); // C·∫ßn token admin
//     // URL c√≥ th·ªÉ l√† /don-hang ho·∫∑c /api/admin/don-hang t√πy b·∫°n ƒë·∫∑t
//     const url = "http://localhost:8080/don-hang";
//     const response = await fetch(url, { headers: { 'Authorization': `Bearer ${token}` } });
//     if (!response.ok) throw new Error(`L·ªói ${response.status} khi l·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng.`);
//     return await response.json();
// }
//
// // Th√™m m·ªõi ƒë∆°n h√†ng (Th∆∞·ªùng kh√¥ng g·ªçi tr·ª±c ti·∫øp t·ª´ FE)
// // export async function themDonHang(donHang: DonHangModel) { ... }
//
// // C·∫≠p nh·∫≠t ƒë∆°n h√†ng (Admin/Staff)
// export async function capNhatDonHangAdmin(donHang: DonHangModel): Promise<DonHangModel> {
//     const token = getToken();
//     if (!token) throw new Error("Y√™u c·∫ßu quy·ªÅn Admin/Staff.");
//     console.log("üì§ G·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t ƒë∆°n h√†ng:", donHang);
//     const url = `http://localhost:8080/don-hang/${donHang.maDonHang}`; // URL ƒë√∫ng
//     const response = await fetch(url, {
//         method: "PUT",
//         headers: {
//             "Content-Type": "application/json",
//             'Authorization': `Bearer ${token}` // Th√™m token
//         },
//         body: JSON.stringify(donHang), // Ch·ªâ g·ª≠i nh·ªØng tr∆∞·ªùng c·∫ßn c·∫≠p nh·∫≠t, vd: { trangThai: "..." }
//     });
//     if (!response.ok) {
//         const errorData = await response.json().catch(()=>({message: `L·ªói ${response.status}`}));
//         throw new Error(errorData.noiDung || errorData.message || `L·ªói ${response.status} khi c·∫≠p nh·∫≠t ƒë∆°n h√†ng.`);
//     }
//     return await response.json();
// }
//
// // X√≥a ƒë∆°n h√†ng (Admin)
// export async function xoaDonHangAdmin(maDonHang: number): Promise<void> {
//     const token = getToken();
//     if (!token) throw new Error("Y√™u c·∫ßu quy·ªÅn Admin.");
//     console.log("üì§ G·ª≠i y√™u c·∫ßu x√≥a ƒë∆°n h√†ng:", maDonHang);
//     const url = `http://localhost:8080/don-hang/${maDonHang}`; // URL ƒë√∫ng
//     const response = await fetch(url, {
//         method: "DELETE",
//         headers: { 'Authorization': `Bearer ${token}` } // Th√™m token
//     });
//     if (!response.ok && response.status !== 204) { // 204 l√† th√†nh c√¥ng kh√¥ng c√≥ n·ªôi dung
//         const errorData = await response.json().catch(()=>({message: `L·ªói ${response.status}`}));
//         throw new Error(errorData.noiDung || errorData.message || `L·ªói ${response.status} khi x√≥a ƒë∆°n h√†ng.`);
//     }
//     console.log("‚úÖ ƒê∆°n h√†ng ƒë√£ x√≥a:", maDonHang);
// }
//
// // B·ªè h√†m layDonHangTheoNguoiDung c≈© ƒëi v√¨ kh√¥ng d√πng endpoint ƒë√≥
//
//
//
//


import DonHangModel from "../models/DonHangModel";

const getToken = () => localStorage.getItem('token');

// H√†m cho USER xem ƒë∆°n h√†ng c·ªßa m√¨nh
export async function layDonHangCuaToi(): Promise<DonHangModel[]> {
    const token = getToken();
    if (!token) throw new Error("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem ƒë∆°n h√†ng.");
    const url = 'http://localhost:8080/don-hang/my-orders';
    try {
        const response = await fetch(url, { method: 'GET', headers: { 'Authorization': `Bearer ${token}` }});
        if (!response.ok) {
            const errorText = await response.text().catch(() => `L·ªói ${response.status}`);
            throw new Error(errorText || `L·ªói ${response.status} khi l·∫•y l·ªãch s·ª≠ ƒë∆°n h√†ng`);
        }
        const data: DonHangModel[] = await response.json();
        return data;
    } catch(error) {
        console.error("[API] layDonHangCuaToi fetch/parse error:", error);
        throw error;
    }
}

// === C√ÅC H√ÄM CHO ADMIN ===

// L·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng (Admin)
export async function layToanBoDonHangAdmin(): Promise<DonHangModel[]> { // <<< D√ôNG T√äN N√ÄY
    const token = getToken();
    if (!token) throw new Error("Y√™u c·∫ßu quy·ªÅn Admin.");
    const url = "http://localhost:8080/don-hang";
    try {
        const response = await fetch(url, { headers: { 'Authorization': `Bearer ${token}` } });
        if (!response.ok) throw new Error(`L·ªói ${response.status} khi l·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng.`);
        const data = await response.json();
        return data._embedded?.donHangs || (Array.isArray(data) ? data : []);
    } catch(error) {
        console.error("[API] layToanBoDonHangAdmin fetch/parse error:", error);
        throw error;
    }
}

// C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng (Admin/Staff) - V√≠ d·ª•
export async function capNhatTrangThaiDonHangAdmin(maDonHang: number, trangThaiMoi: string): Promise<DonHangModel> { // <<< D√ôNG T√äN N√ÄY (Ho·∫∑c t√™n h√†m c·∫≠p nh·∫≠t kh√°c b·∫°n t·∫°o)
    const token = getToken();
    if (!token) throw new Error("Y√™u c·∫ßu quy·ªÅn Admin/Staff.");
    const url = `http://localhost:8080/don-hang/${maDonHang}`;
    try {
        const response = await fetch(url, {
            method: "PUT",
            headers: { "Content-Type": "application/json", 'Authorization': `Bearer ${token}` },
            body: JSON.stringify({ trangThai: trangThaiMoi }),
        });
        if (!response.ok) {
            const errorData = await response.json().catch(()=>({message: `L·ªói ${response.status}`}));
            throw new Error(errorData.noiDung || errorData.message || `L·ªói ${response.status} khi c·∫≠p nh·∫≠t ƒë∆°n h√†ng.`);
        }
        return await response.json();
    } catch (error) {
        console.error("[API] capNhatTrangThaiDonHangAdmin fetch/parse error:", error);
        throw error;
    }
}

// X√≥a ƒë∆°n h√†ng (Admin)
export async function xoaDonHangAdmin(maDonHang: number): Promise<void> { // <<< D√ôNG T√äN N√ÄY
    const token = getToken();
    if (!token) throw new Error("Y√™u c·∫ßu quy·ªÅn Admin.");
    const url = `http://localhost:8080/don-hang/${maDonHang}`;
    try {
        const response = await fetch(url, {
            method: "DELETE",
            headers: { 'Authorization': `Bearer ${token}` }
        });
        if (!response.ok && response.status !== 204) {
            const errorData = await response.json().catch(()=>({message: `L·ªói ${response.status}`}));
            throw new Error(errorData.noiDung || errorData.message || `L·ªói ${response.status} khi x√≥a ƒë∆°n h√†ng.`);
        }
    } catch (error) {
        console.error("[API] xoaDonHangAdmin fetch error:", error);
        throw error;
    }
}

// --- B·ªè c√°c h√†m kh√¥ng d√πng ho·∫∑c sai ---